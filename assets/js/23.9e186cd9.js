(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{483:function(n,e,a){"use strict";a.r(e);var t=a(13),s=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"реалізація-інформаціиного-та-програмного-забезпечення"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#реалізація-інформаціиного-та-програмного-забезпечення"}},[n._v("#")]),n._v(" Реалізація інформаційного та програмного забезпечення")]),n._v(" "),e("p",[n._v("В рамках проекту розробляється:")]),n._v(" "),e("h2",{attrs:{id:"sql-скрипт"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql-скрипт"}},[n._v("#")]),n._v(" SQL скрипт")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema OpenDataManagementSystem\n-- -----------------------------------------------------\nDROP SCHEMA IF EXISTS `OpenDataManagementSystem` ;\n\n-- -----------------------------------------------------\n-- Schema OpenDataManagementSystem\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `OpenDataManagementSystem` DEFAULT CHARACTER SET utf8 ;\nUSE `OpenDataManagementSystem` ;\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`donate`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`donate` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`donate` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `card` VARCHAR(45) NULL,\n  `owner` VARCHAR(45) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`role`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`role` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`role` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(20) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`user`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`user` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`user` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `username` VARCHAR(20) NULL,\n  `email` VARCHAR(45) NULL,\n  `password` VARCHAR(45) NULL,\n  `avatar` VARCHAR(100) NULL,\n  `donate_id` INT NOT NULL,\n  `role_id` INT NOT NULL,\n  PRIMARY KEY (`id`, `donate_id`, `role_id`),\n  INDEX `fk_User_Donate_idx` (`donate_id` ASC) VISIBLE,\n  INDEX `fk_user_role1_idx` (`role_id` ASC) VISIBLE,\n  CONSTRAINT `fk_ref_Donate`\n    FOREIGN KEY (`donate_id`)\n    REFERENCES `OpenDataManagementSystem`.`donate` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_user_role1`\n    FOREIGN KEY (`role_id`)\n    REFERENCES `OpenDataManagementSystem`.`role` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`category`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`category` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`category` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(30) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`dataFile`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`dataFile` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`dataFile` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(45) NULL,\n  `description` VARCHAR(200) NULL,\n  `file_csv` VARCHAR(45) NULL,\n  `uploadDate` DATETIME NULL,\n  `hasGraph` TINYINT NULL,\n  `category_id` INT NOT NULL,\n  PRIMARY KEY (`id`, `category_id`),\n  INDEX `fk_dataFile_category1_idx` (`category_id` ASC) VISIBLE,\n  CONSTRAINT `fk_dataFile_category1`\n    FOREIGN KEY (`category_id`)\n    REFERENCES `OpenDataManagementSystem`.`category` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`fileCollection`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`fileCollection` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`fileCollection` (\n  `user_id` INT NOT NULL,\n  `dataFile_id` INT NOT NULL,\n  PRIMARY KEY (`user_id`, `dataFile_id`),\n  INDEX `fk_fileCollection_dataFile1_idx` (`dataFile_id` ASC) VISIBLE,\n  CONSTRAINT `fk_fileCollection_user1`\n    FOREIGN KEY (`user_id`)\n    REFERENCES `OpenDataManagementSystem`.`user` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_fileCollection_dataFile1`\n    FOREIGN KEY (`dataFile_id`)\n    REFERENCES `OpenDataManagementSystem`.`dataFile` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`editForm`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`editForm` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`editForm` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `editorUserame` VARCHAR(20) NULL,\n  `oldFile_csv` VARCHAR(100) NULL,\n  `newFile_csv` VARCHAR(100) NULL,\n  `editDate` DATETIME NULL,\n  `dataFile_id` INT NOT NULL,\n  `dataFile_category_id` INT NOT NULL,\n  PRIMARY KEY (`id`, `dataFile_id`, `dataFile_category_id`),\n  INDEX `fk_editForm_dataFile1_idx` (`dataFile_id` ASC, `dataFile_category_id` ASC) VISIBLE,\n  CONSTRAINT `fk_editForm_dataFile1`\n    FOREIGN KEY (`dataFile_id` , `dataFile_category_id`)\n    REFERENCES `OpenDataManagementSystem`.`dataFile` (`id` , `category_id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`permission`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`permission` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`permission` (\n  `id` INT NOT NULL AUTO_INCREMENT,\n  `name` VARCHAR(20) NULL,\n  PRIMARY KEY (`id`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `OpenDataManagementSystem`.`access`\n-- -----------------------------------------------------\nDROP TABLE IF EXISTS `OpenDataManagementSystem`.`access` ;\n\nCREATE TABLE IF NOT EXISTS `OpenDataManagementSystem`.`access` (\n  `role_id` INT NOT NULL,\n  `permission_id` INT NOT NULL,\n  PRIMARY KEY (`role_id`, `permission_id`),\n  INDEX `fk_access_permission1_idx` (`permission_id` ASC) VISIBLE,\n  CONSTRAINT `fk_access_role1`\n    FOREIGN KEY (`role_id`)\n    REFERENCES `OpenDataManagementSystem`.`role` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_access_permission1`\n    FOREIGN KEY (`permission_id`)\n    REFERENCES `OpenDataManagementSystem`.`permission` (`id`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`donate`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`donate` (`id`, `card`, `owner`) VALUES (DEFAULT, '4149 4991 3384 6467', 'Yevhenii');\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`role`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`role` (`id`, `name`) VALUES (DEFAULT, 'admin');\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`user`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`user` (`id`, `username`, `email`, `password`, `avatar`, `donate_id`, `role_id`) VALUES (DEFAULT, 'Vasia Pupkin', 'exanple@mail.com', '123', 'image.jpg', 1, 1);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`category`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`category` (`id`, `name`) VALUES (DEFAULT, 'others');\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`dataFile`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`dataFile` (`id`, `name`, `description`, `file_csv`, `uploadDate`, `hasGraph`, `category_id`) VALUES (DEFAULT, 'title', 'some description', 'namefile.csv', '2023-01-03 12:00:00.000', 1, 1);\n\nCOMMIT;\n\n\n-- -----------------------------------------------------\n-- Data for table `OpenDataManagementSystem`.`permission`\n-- -----------------------------------------------------\nSTART TRANSACTION;\nUSE `OpenDataManagementSystem`;\nINSERT INTO `OpenDataManagementSystem`.`permission` (`id`, `name`) VALUES (DEFAULT, 'create');\nINSERT INTO `OpenDataManagementSystem`.`permission` (`id`, `name`) VALUES (DEFAULT, 'read');\n\nCOMMIT;\n")])])]),e("h2",{attrs:{id:"restfull-сервіс-для-управління-даними"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restfull-сервіс-для-управління-даними"}},[n._v("#")]),n._v(" RESTfull сервіс для управління даними")]),n._v(" "),e("h3",{attrs:{id:"фаил-сервера"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#фаил-сервера"}},[n._v("#")]),n._v(" Файл сервера")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const express = require('express');\nconst bodyParser = require('body-parser');\n\nconst port = 7777;\n\nconst app = express();\n\napp.use(bodyParser.text());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use('/Donate', require('./routes'));\n\napp.listen(port, () => {\n  console.log(`Server started on http://localhost:${port}`);\n});\n")])])]),e("h3",{attrs:{id:"фаил-обробник-маршрутів"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#фаил-обробник-маршрутів"}},[n._v("#")]),n._v(" Файл-обробник маршрутів")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const { Router, query } = require(\"express\");\nconst mysql = require('mysql2/promise');\nconst { extend } = require('lodash');\n\nconst connectionUrl = 'mysql://root:@localhost:3306/imbaza';\n\nconst sql = {\n  createDonate: `INSERT INTO DONATE(ID, CARD, OWNER) VALUES (:id, :card, :owner)`,\n  readDonateByID: `SELECT * FROM DONATE WHERE ID= :id`,\n  readAllDonate: `SELECT * FROM DONATE`,\n  updateDonateByID: `UPDATE DONATE SET CARD= :card, OWNER= :owner WHERE ID= :id`,\n  deleteDonateByID: `DELETE FROM DONATE WHERE ID= :id`,\n};\n\nconst executeSQL = async (query, values) => {\n  let connection;\n  let sqlStatement;\n  try {\n    connection = await mysql.createConnection({\n      uri: connectionUrl,\n      password: '1234567890',\n      namedPlaceholders: true\n    });\n\n    sqlStatement = await connection.format(query, values);\n\n    const [ results, fields ] = await connection.execute(sqlStatement);\n    return results;\n  } catch (err) {\n    throw new Error(`SQL: ${sqlStatement} - ${err.toString()}`);\n  } finally {\n    if (connection) connection.end();\n  }\n};\n\nconst router = Router();\n\nrouter.post('/:id', async (req, res) => {\n  try {\n    const values = extend({}, req.body, req.params);\n    let result = await executeSQL(sql.createDonate, values);\n    result = await executeSQL(sql.readDonateByID, req.params);\n    res.status(200).send(result);\n  } catch (err) {\n    return res.status(500).send({\n      status: 500,\n      error: err.toString()\n    });\n  }\n});\n\nrouter.get('/', async (req, res) => {\n  try {\n    const result = await executeSQL(sql.readAllDonate);\n    res.status(200).send(result);\n  } catch (err) {\n    return res.status(500).send(err.toString());\n  }\n});\n\nrouter.get('/:id', async (req, res) => {\n  try {\n    const result = await executeSQL(sql.readDonateByID, req.params);\n    res.status(200).send(result);\n  } catch (err) {\n    return res.status(500).send(err.toString());\n  }\n});\n\nrouter.put('/:id', async (req, res) => {\n  try {\n    const values = extend({}, req.body, req.params);\n    let result = await executeSQL(sql.updateDonateByID, values);\n    result = await executeSQL(sql.readDonateByID, req.params);\n    res.status(200).send(result);\n  } catch (err) {\n    return res.status(500).send(err.toString());\n  }\n});\n\nrouter.delete('/:id', async (req, res) => {\n  try {\n    const result = await executeSQL(sql.readDonateByID, req.params);\n    await executeSQL(sql.deleteDonateByID, req.params);\n    res.status(200).send(result);\n  } catch (err) {\n    return res.status(500).send(err.toString());\n  }\n});\n\nmodule.exports = router;\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);